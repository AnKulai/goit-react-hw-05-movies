{"version":3,"file":"static/js/114.5e190992.chunk.js","mappings":"qOAGaA,EAAkBC,EAAAA,GAAAA,IAAH,oZAwBfC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,sE,SCUvB,EAjCkB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACXC,EAAmCD,EAAnCC,GAAIC,EAA+BF,EAA/BE,cAAeC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KAE9BC,EAAeF,GAASC,EAM5B,OAJIC,EAAaC,OAAS,KACxBD,EAAeA,EAAaE,MAAM,EAAG,IAAIC,OAAO,SAIhD,SAACV,EAAD,CAAYW,GAAE,kBAAaR,GAA3B,UACE,UAACL,EAAD,YACE,gBACEc,IAAG,yCAAoCR,GACvCS,IAAI,SACJC,MAAM,OACNC,OAAO,UAET,gBAAKC,UAAU,cAAf,SAA8BT,QAIrC,C,oICxBYU,E,QAAalB,GAAAA,IAAH,oH,uCC2CvB,EAtCiB,WACf,OAAkCmB,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAIMC,EAAqB,mCAAG,sGAE1BD,GAAa,GAFa,SAGQE,EAAAA,EAAAA,cAHR,gBAGTC,EAHS,EAGlBC,QACRN,EAAaK,GAJa,gDAM1BE,QAAQC,MAAR,MAN0B,yBAQ1BN,GAAa,GARa,4EAAH,qDA6B3B,OAVAO,EAAAA,EAAAA,YACE,WACEN,GACD,GAED,KAKK,SAACN,EAAD,UAAaI,GAAY,SAACS,EAAA,EAAD,IAjBP,WACvB,GAAkB,OAAdX,EACJ,OAAOA,EAAUY,KAAI,SAAA7B,GAAK,OAAI,SAAC,UAAD,CAA0BA,MAAOA,GAAjBA,EAAMC,GAA1B,GAC3B,CAc4C6B,IAC9C,C,kGCtCD,EALe,CACbC,SAAS,gCACTC,QAAQ,oCC0EV,EAzEiB,CACTC,YADS,WACM,OAAD,gIAEOC,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,SAAb,qBAAiD,CACtEC,OAAQ,CACNC,QAASF,EAAAA,WAJG,uBAERG,EAFQ,EAERA,KAFQ,kBAOTA,GAPS,gCAShBb,QAAQC,MAAR,MATgB,0DAWnB,EAEKa,aAdS,SAcIC,GAAU,OAAD,gIAEDN,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,SAAb,iBAAqCK,GAAW,CACrEJ,OAAQ,CACNC,QAASF,EAAAA,WAJW,uBAEhBG,EAFgB,EAEhBA,KAFgB,kBAOjBA,GAPiB,gCASxBb,QAAQC,MAAR,MATwB,0DAW3B,EAEKe,aA3BS,SA2BID,GAAU,OAAD,gIAEDN,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,SADkB,iBACMK,EADN,YAErB,CACEJ,OAAQ,CACNC,QAASF,EAAAA,WANS,uBAEhBG,EAFgB,EAEhBA,KAFgB,kBAUjBA,GAViB,gCAYxBb,QAAQC,MAAR,MAZwB,0DAc3B,EACKgB,aA1CS,SA0CIF,GAAU,OAAD,gIAEDN,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,SADkB,iBACMK,EADN,YAErB,CACEJ,OAAQ,CACNC,QAASF,EAAAA,WANS,uBAEhBG,EAFgB,EAEhBA,KAFgB,kBAUjBA,GAViB,gCAYxBb,QAAQC,MAAR,MAZwB,0DAc3B,EAEKiB,mBA1DS,SA0DUC,GAAQ,OAAD,gIAELV,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,SAAb,gBAA4C,CACjEC,OAAQ,CACNC,QAASF,EAAAA,QACTS,MAAAA,KALwB,uBAEpBN,EAFoB,EAEpBA,KAFoB,kBAQrBA,GARqB,gCAU5Bb,QAAQC,MAAR,MAV4B,0DAY/B,E","sources":["components/MovieCard/MovieTrendCards.styled.js","components/MovieCard/MovieTrendCards.jsx","pages/Home/HomePage.styled.js","pages/Home/HomePage.jsx","configuration/config.js","service/movieAPI.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovieCard = styled.div`\n  min-height: auto;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  transition: 0.3s;\n\n  &:hover {\n    scale: 1.05;\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n  }\n\n  & > img {\n    border-radius: 5px;\n  }\n\n  & > .description {\n    width: 100%;\n    padding: 10px 15px;\n    text-align: center;\n    color: black;\n    height: auto;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  font-size: 22px;\n`;\n","import React from 'react';\nimport { StyledLink, StyledMovieCard } from './MovieTrendCards.styled';\nimport { PropTypes } from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n  const { id, backdrop_path, title, name } = movie;\n  // Fix API title bug\n  let correctTitle = title || name;\n  // Cropping for better display\n  if (correctTitle.length > 26) {\n    correctTitle = correctTitle.slice(0, 26).concat('...');\n  }\n\n  return (\n    <StyledLink to={`/movies/${id}`}>\n      <StyledMovieCard>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n          alt=\"photos\"\n          width=\"100%\"\n          height=\"auto\"\n        />\n        <div className=\"description\">{correctTitle}</div>\n      </StyledMovieCard>\n    </StyledLink>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    backdrop_path: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const StyledHome = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 15px;\n\n`;\n","import React, { useEffect, useState } from 'react';\nimport { StyledHome } from './HomePage.styled';\n\nimport movieApi from 'service/movieAPI';\nimport MovieCard from 'components/MovieCard/MovieTrendCards';\nimport Loader from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  const [movieList, setMovieList] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Fetch trending movies from DB\n\n  const getTrendingMoviesList = async () => {\n    try {\n      setIsLoading(true);\n      const { results: movies } = await movieApi.fetchTrends();\n      setMovieList(movies);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const createMovieCards = () => {\n    if (movieList === null) return;\n    return movieList.map(movie => <MovieCard key={movie.id} movie={movie} />);\n  };\n\n  // Get default trending movies\n\n  useEffect(\n    () => {\n      getTrendingMoviesList();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  // Render\n\n  return <StyledHome>{isLoading ? <Loader /> : createMovieCards()}</StyledHome>;\n};\n\nexport default HomePage;\n","const config = {\n  BASE_URL: `https://api.themoviedb.org/3/`,\n  API_KEY: `cae69de8a9226671dcc6f789bf47c829`,\n};\n\nexport default config;","import axios from 'axios';\nimport config from './../configuration/config';\n\nconst movieApi = {\n  async fetchTrends() {\n    try {\n      const { data } = await axios.get(`${config.BASE_URL}/trending/all/day`, {\n        params: {\n          api_key: config.API_KEY,\n        },\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  async fetchDetails(movieId) {\n    try {\n      const { data } = await axios.get(`${config.BASE_URL}movie/${movieId}`, {\n        params: {\n          api_key: config.API_KEY,\n        },\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  async fetchCredits(movieId) {\n    try {\n      const { data } = await axios.get(\n        `${config.BASE_URL}movie/${movieId}/credits`,\n        {\n          params: {\n            api_key: config.API_KEY,\n          },\n        }\n      );\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  async fetchReviews(movieId) {\n    try {\n      const { data } = await axios.get(\n        `${config.BASE_URL}movie/${movieId}/reviews`,\n        {\n          params: {\n            api_key: config.API_KEY,\n          },\n        }\n      );\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  async fetchMoviesByQuery(query) {\n    try {\n      const { data } = await axios.get(`${config.BASE_URL}search/movie`, {\n        params: {\n          api_key: config.API_KEY,\n          query,\n        },\n      });\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  },\n};\n\nexport default movieApi;\n"],"names":["StyledMovieCard","styled","StyledLink","NavLink","movie","id","backdrop_path","title","name","correctTitle","length","slice","concat","to","src","alt","width","height","className","StyledHome","useState","movieList","setMovieList","isLoading","setIsLoading","getTrendingMoviesList","movieApi","movies","results","console","error","useEffect","Loader","map","createMovieCards","BASE_URL","API_KEY","fetchTrends","axios","config","params","api_key","data","fetchDetails","movieId","fetchCredits","fetchReviews","fetchMoviesByQuery","query"],"sourceRoot":""}